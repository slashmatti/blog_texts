<% widgetName = 'BlogTextsWidget' %>

var <%= widgetName %> = {
    iconStyles: {
        circle: { backgroundColor: '<%= @widget.background_color %>', height: '50px', width: '50px', borderRadius: '50%', position: 'absolute', bottom: '10px', cursor: 'pointer' },
        square: { backgroundColor: '<%= @widget.background_color %>', height: '50px', width: '50px', position: 'absolute', bottom: '10px', cursor: 'pointer' },
        rectangle: { textAlign: 'center', backgroundColor: '<%= @widget.background_color %>', height: '50px', width: '100px', borderRadius: '10%', position: 'absolute', bottom: '10px', cursor: 'pointer' },
    },
    welcomeMessage: '<%= @widget.welcome_message %>',
    backgroundColor: '<%= @widget.background_color %>',
    enabled: <%= @widget.enabled %>,
    shape: '<%= @widget.shape %>',
    location: '<%= @widget.location %>',
    formHtml: '<%= j render "form" %>',
    formId: 'new_message',
    cssStyles: '<%= asset_url("tailwind.css") %>',
    thankYouHtml: '<p id="<%= widgetName %>_thank_you" class="py-4 px-4"><%= @widget.thanks_message %></p>',

    init: function() {
        if (this.enabled) {
            this.showIcon();
            this.plantCss();
        }
    },

    plantCss: function() {
        let stylesheet = document.createElement('link');
        stylesheet.rel = 'stylesheet';
        stylesheet.href = this.cssStyles;
        document.head.append(stylesheet);
    },

    showForm: function() {
        document.body.insertAdjacentHTML('beforeend', this.formHtml);

        this.customizeForm();

        document.getElementById('new_message').addEventListener('submit', this.submitForm);
        document.getElementById('blog_text_close').addEventListener('click', this.hideForm.bind(this));
        
        this.enableAutosave();
        this.hideIcon();
    },

    customizeForm: function() {
        var self = this;

        // 0. attach widget's client ID
        document.getElementById('client_id').value = '<%= @widget.client_id %>';

        // 1. user customize welcome message
        document.getElementById('blog_text_widget_welcome_message').innerText = self.welcomeMessage;
        
        // 2. user customize colors
        Array.from(document.getElementsByClassName('blog_text_widget_background_color')).forEach(function(el) {
            el.style.backgroundColor = self.backgroundColor;
        });

        // 3. set form location
        let widget = document.getElementById('blog_text_widget');
        let offset = '20px';
        widget.style.bottom = offset;
        
        if (self.location == 'bottom_right') {
            widget.style.right = offset;
        } else if (self.location == 'bottom_left') {
            widget.style.left = offset;
        }

        // 4. user customize avatar
        <% if @widget.avatar.present? %>
            let avatarSrc = '<%= Rails.application.routes.url_helpers.url_for(@widget.avatar) %>';
            document.getElementById('blog_text_widget_avatar').src = avatarSrc;
        <% end %>

        // 5. set focus
        document.getElementById('message_name').focus();
    },

    hideForm: function() {
        document.getElementById('blog_text_widget').remove();
        this.showIcon();
    },

    hideIcon: function() {
        document.getElementById('blog_text_icon').remove();
    },

    showIcon: function() {
        let icon = document.createElement('span');
        icon.id = 'blog_text_icon';
        icon.addEventListener('click', this.showForm.bind(this));

        this.customizeIcon(icon);
    },

    customizeIcon: function(icon) {
        // 1. user customize icon shape
        Object.assign(icon.style, this.iconStyles[this.shape]);

        // 2. user customize icon location
        let offset = '10px';
        if (this.location == 'bottom_right') {
          icon.style.right = offset;
        } else if (this.location == 'bottom_left') {
          icon.style.left = offset;
        };

        // 3. add svg and label (rectangle only)
        let viewBox = '-7 -6 36 36';
        if (this.shape == 'rectangle') {
          viewBox = '-2 -2 30 30'
          icon.insertAdjacentHTML('afterbegin', '<span>Ping me!</>');
          icon.classList.add('flex');
        }

        icon.insertAdjacentHTML('beforeend', '<svg xmlns="http://www.w3.org/2000/svg" viewBox="' + viewBox + '" fill="currentColor" class="w-12 h-12"><path d="M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32l8.4-8.4z" /><path d="M5.25 5.25a3 3 0 00-3 3v10.5a3 3 0 003 3h10.5a3 3 0 003-3V13.5a.75.75 0 00-1.5 0v5.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5V8.25a1.5 1.5 0 011.5-1.5h5.25a.75.75 0 000-1.5H5.25z" /></svg>');

        // 4. plant icon on page
        document.body.append(icon);
    },

    enableAutosave: function() {
        ['name', 'email'].forEach(function(formField) {
            // attach autosave functionality to name, email form fields
            let fieldEl = document.getElementById('message_' + formField);
      
            fieldEl.addEventListener('change', function() {
              localStorage.setItem('<%= widgetName %>' + '_' + formField, fieldEl.value);
            })
      
            // retrieve existing autosaved value; if exists, prefill input
            let savedValue = localStorage.getItem('<%= widgetName %>' + '_' + formField);
      
            if (savedValue != null) {
              fieldEl.value = savedValue;
            }
          })
        },

        showThankYou: function() {
            document.getElementById(this.formId).innerHTML = this.thankYouHtml;
            setTimeout(this.hideForm.bind(this), 4000);
          },

        submitForm: function(e) {
            e.preventDefault();
            let form = e.target;
            fetch(form.action, {
                method: 'POST',
                body: new FormData(form)
            }).then((response) => {
                <%= widgetName %>.showThankYou();
            })
        }
}

<%= widgetName %>.init();